{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","decimalCount","handleClear","bind","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleEquals","addNumber","addDec","handleOp","setState","e","length","substring","target","value","compute","eval","parseFloat","toFixed","toExponential","react__WEBPACK_IMPORTED_MODULE_6___default","id","class","onClick","React","Component"],"mappings":"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","file":"static/js/main.6ea2e872.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"\",\n      decimalCount: 0\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.addNumber = this.addNumber.bind(this);\n    this.addDec = this.addDec.bind(this);\n    this.handleOp = this.handleOp.bind(this);\n  }\n  handleClear() {\n    this.setState({\n      display: \"0\",\n      decimalCount: 0\n    });\n  }\n  handleOp(e) {\n    let display = this.state.display;\n    switch (display[display.length - 1]) {\n      case \"-\":\n      case \"+\":\n      case \"*\":\n      case \"/\":\n        this.setState({\n          display: display.substring(0, display.length - 1) + e.target.value\n        });\n        break;\n      default: {\n        this.addNumber(e);\n      }\n    }\n  }\n  addDec(e) {\n    if (this.state.decimalCount == 0) {\n      this.addNumber(e);\n    }\n    this.setState({\n      decimalCount: this.state.decimalCount + 1\n    });\n  }\n\n  addNumber(e) {\n    if (this.state.display == 0) {\n      this.setState({\n        display: \"\" + e.target.value\n      });\n    } else if (e.target.value == \".\" && this.state.decimalCount > 0) {\n      this.setState({\n        display: this.state.display + \"\"\n      });\n    } else if (\n      e.target.value == \"+\" ||\n      e.target.value == \"-\" ||\n      e.target.value == \"*\" ||\n      e.target.value == \"/\"\n    ) {\n      this.setState({\n        display: this.state.display + e.target.value,\n        decimalCount: 0\n      });\n    } else {\n      this.setState({\n        display: this.state.display + e.target.value\n      });\n    }\n  }\n  handleEquals() {\n    var compute = eval(this.state.display);\n    if (compute < 1000000000) {\n      this.setState({\n        display: parseFloat(compute.toFixed(5))\n      });\n    } else {\n      this.setState({\n        display: compute.toExponential(5)\n      });\n    }\n  }\n\n  render() {\n    const numbers = [];\n    return (\n      <div id=\"container\">\n        <div id=\"calc-container\">\n          <div id=\"calc-buttons\">\n            <div id=\"display\">{this.state.display}</div>\n            <button class=\"number\" id=\"clear\" onClick={this.handleClear}>\n              AC\n            </button>\n            <button class=\"number\" id=\"decimal\" value=\".\" onClick={this.addDec}>\n              .\n            </button>\n            <button class=\"number\" id=\"zero\" value=\"0\" onClick={this.addNumber}>\n              0\n            </button>\n            <button\n              class=\"operand\"\n              id=\"multiply\"\n              value=\"*\"\n              onClick={this.handleOp}\n            >\n              X\n            </button>\n            <button class=\"number\" id=\"one\" value=\"1\" onClick={this.addNumber}>\n              1\n            </button>\n            <button class=\"number\" id=\"two\" value=\"2\" onClick={this.addNumber}>\n              2\n            </button>\n            <button\n              class=\"number\"\n              id=\"three\"\n              value=\"3\"\n              onClick={this.addNumber}\n            >\n              3\n            </button>\n            <button\n              class=\"operand\"\n              id=\"subtract\"\n              value=\"-\"\n              onClick={this.handleOp}\n            >\n              -\n            </button>\n            <button class=\"number\" id=\"four\" value=\"4\" onClick={this.addNumber}>\n              4\n            </button>\n            <button class=\"number\" id=\"five\" value=\"5\" onClick={this.addNumber}>\n              5\n            </button>\n            <button class=\"number\" id=\"six\" value=\"6\" onClick={this.addNumber}>\n              6\n            </button>\n            <button class=\"operand\" id=\"add\" value=\"+\" onClick={this.handleOp}>\n              +\n            </button>\n            <button\n              class=\"number\"\n              id=\"seven\"\n              value=\"7\"\n              onClick={this.addNumber}\n            >\n              7\n            </button>\n            <button\n              class=\"number\"\n              id=\"eight\"\n              value=\"8\"\n              onClick={this.addNumber}\n            >\n              8\n            </button>\n            <button class=\"number\" id=\"nine\" value=\"9\" onClick={this.addNumber}>\n              9\n            </button>\n            <button\n              class=\"operand\"\n              id=\"divide\"\n              value=\"/\"\n              onClick={this.handleOp}\n            >\n              /\n            </button>\n            <button\n              class=\"operand\"\n              id=\"equals\"\n              value=\"=\"\n              onClick={this.handleEquals}\n            >\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}