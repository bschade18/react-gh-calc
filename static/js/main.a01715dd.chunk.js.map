{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_BobbyS_web_projects_react_gh_calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","addNumber","e","value","target","_this$state","state","display","compute","operationWasLast","equalsWasLast","setState","addDecimal","_this$state2","decimalCount","handleOperation","blinkDisplay","handleClear","handleEquals","computation","eval","parseFloat","toFixed","toExponential","blink","setTimeout","displayStyle","color","react__WEBPACK_IMPORTED_MODULE_5___default","id","style","className","onClick","React","Component"],"mappings":"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","file":"static/js/main.a01715dd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"0\",\n      compute: \"0\",\n      decimalCount: 0,\n      equalsWasLast: false,\n      operationWasLast: false,\n      blink: false\n    };\n  }\n\n  addNumber = e => {\n    const value = e.target.value;\n    const { display, compute, operationWasLast, equalsWasLast } = this.state;\n\n    if (operationWasLast) {\n      this.setState({\n        display: value,\n        compute: compute + value\n      });\n    } else if (display === \"0\" || equalsWasLast) {\n      this.setState({\n        display: value,\n        compute: value\n      });\n    } else {\n      this.setState({\n        display: display + value,\n        compute: compute + value\n      });\n    }\n\n    this.setState({\n      equalsWasLast: false,\n      operationWasLast: false\n    });\n  };\n\n  addDecimal = () => {\n    const {\n      display,\n      compute,\n      operationWasLast,\n      equalsWasLast,\n      decimalCount\n    } = this.state;\n\n    if (decimalCount > 0) {\n      return;\n    } else if (equalsWasLast || display === \"0\") {\n      this.setState({\n        display: \"0.\",\n        compute: \"0.\"\n      });\n    } else if (operationWasLast) {\n      this.setState({\n        display: \"0.\",\n        compute: compute + \".\"\n      });\n    } else {\n      this.setState({\n        display: display + \".\",\n        compute: compute + \".\"\n      });\n    }\n\n    this.setState({\n      decimalCount: decimalCount + 1,\n      equalsWasLast: false,\n      operationWasLast: false\n    });\n  };\n\n  handleOperation = e => {\n    this.blinkDisplay();\n\n    const value = e.target.value;\n    const display = this.state.display;\n\n    this.setState({\n      compute: display + value\n    });\n\n    this.setState({\n      equalsWasLast: false,\n      operationWasLast: true,\n      decimalCount: 0\n    });\n  };\n\n  handleClear = () => {\n    this.blinkDisplay();\n\n    this.setState({\n      compute: \"0\",\n      display: \"0\",\n      decimalCount: 0,\n      equalsWasLast: false,\n      operationWasLast: false\n    });\n  };\n\n  handleEquals = () => {\n    this.blinkDisplay();\n    const display = this.state.display;\n    let computation;\n\n    if (this.state.operationWasLast) {\n      computation = this.state.compute;\n      computation += display;\n    } else {\n      computation = this.state.compute;\n    }\n\n    let compute = eval(computation);\n\n    if (compute < 10000000000000) {\n      this.setState({\n        display: parseFloat(compute.toFixed(6)),\n        compute: parseFloat(compute.toFixed(6)),\n        decimalCount: 0,\n        equalsWasLast: true\n      });\n    } else {\n      this.setState({\n        display: compute.toExponential(5),\n        compute: compute.toExponential(5),\n        decimalCount: 0,\n        equalsWasLast: true\n      });\n    }\n  };\n\n  blinkDisplay = () => {\n    this.setState({\n      blink: true\n    });\n\n    setTimeout(\n      () =>\n        this.setState({\n          blink: false\n        }),\n      50\n    );\n  };\n\n  render() {\n    const displayStyle = this.state.blink\n      ? { color: \"white\" }\n      : { color: \"black\" };\n\n    return (\n      <div id=\"container\">\n        <div id=\"calc-container\">\n          <div id=\"calc-btns\">\n            <div id=\"display\" style={displayStyle}>\n              {this.state.display}\n            </div>\n            <button className=\"number\" id=\"clear\" onClick={this.handleClear}>\n              AC\n            </button>\n            <button\n              className=\"decimal-btn\"\n              id=\"decimal\"\n              value=\".\"\n              onClick={this.addDecimal}\n            >\n              .\n            </button>\n            <button\n              className=\"number\"\n              id=\"zero\"\n              value=\"0\"\n              onClick={this.addNumber}\n            >\n              0\n            </button>\n            <button\n              className=\"operation\"\n              id=\"multiply\"\n              value=\"*\"\n              onClick={this.handleOperation}\n            >\n              X\n            </button>\n            <button\n              className=\"number\"\n              id=\"one\"\n              value=\"1\"\n              onClick={this.addNumber}\n            >\n              1\n            </button>\n            <button\n              className=\"number\"\n              id=\"two\"\n              value=\"2\"\n              onClick={this.addNumber}\n            >\n              2\n            </button>\n            <button\n              className=\"number\"\n              id=\"three\"\n              value=\"3\"\n              onClick={this.addNumber}\n            >\n              3\n            </button>\n            <button\n              className=\"operation\"\n              id=\"subtract\"\n              value=\"-\"\n              onClick={this.handleOperation}\n            >\n              -\n            </button>\n            <button\n              className=\"number\"\n              id=\"four\"\n              value=\"4\"\n              onClick={this.addNumber}\n            >\n              4\n            </button>\n            <button\n              className=\"number\"\n              id=\"five\"\n              value=\"5\"\n              onClick={this.addNumber}\n            >\n              5\n            </button>\n            <button\n              className=\"number\"\n              id=\"six\"\n              value=\"6\"\n              onClick={this.addNumber}\n            >\n              6\n            </button>\n            <button\n              className=\"operation\"\n              id=\"add\"\n              value=\"+\"\n              onClick={this.handleOperation}\n            >\n              +\n            </button>\n            <button\n              className=\"number\"\n              id=\"seven\"\n              value=\"7\"\n              onClick={this.addNumber}\n            >\n              7\n            </button>\n            <button\n              className=\"number\"\n              id=\"eight\"\n              value=\"8\"\n              onClick={this.addNumber}\n            >\n              8\n            </button>\n            <button\n              className=\"number\"\n              id=\"nine\"\n              value=\"9\"\n              onClick={this.addNumber}\n            >\n              9\n            </button>\n            <button\n              className=\"operation\"\n              id=\"divide\"\n              value=\"/\"\n              onClick={this.handleOperation}\n            >\n              /\n            </button>\n            <button\n              className=\"operation\"\n              id=\"equals-btn\"\n              value=\"=\"\n              onClick={this.handleEquals}\n            >\n              =\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}